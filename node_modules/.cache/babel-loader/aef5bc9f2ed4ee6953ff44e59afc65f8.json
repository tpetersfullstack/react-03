{"ast":null,"code":"const url = \"http://localhost:5000/\";\n\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrer: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n  });\n  const json = await response.json(); // parses JSON response into native JavaScript objects\n\n  json.status = response.status;\n  json.statusText = response.statusText; // console.log(json, typeof(json));\n\n  return json;\n}\n\nconst fetch_function = {\n  // https://github.com/larryevolveu/reference/blob/master/api/javascript/api.test.js\n  // passing in the relevant object / object key\n  async addCity(city) {\n    return await postData(url + \"add\", city);\n  },\n\n  async deleteCity(ckey) {\n    return await postData(url + \"delete\", {\n      key: ckey\n    });\n  },\n\n  async updateCityPop(city) {\n    return await postData(url + \"update\", city);\n  },\n\n  async getAllCities() {\n    return await postData(url + \"all\");\n  },\n\n  async clearAllCities() {\n    return await postData(url + \"clear\");\n  },\n\n  async readCity(ckey) {\n    return await postData(url + \"read\", {\n      key: ckey\n    });\n  }\n\n};\nexport default fetch_function;","map":{"version":3,"sources":["C:/code/cohort3/react-03/react-03/src/components/cities/fetch.js"],"names":["url","postData","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","json","status","statusText","fetch_function","addCity","city","deleteCity","ckey","key","updateCityPop","getAllCities","clearAllCities","readCity"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;;AAEA,eAAeC,QAAf,CAAwBD,GAAG,GAAG,EAA9B,EAAkCE,IAAI,GAAG,EAAzC,EAA6C;AAC3C;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAChCK,IAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,IAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,IAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,IAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT,CAEP;;AAFO,KALuB;AAShCC,IAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,IAAAA,QAAQ,EAAE,aAVsB;AAUP;AACzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAX0B,CAWL;;AAXK,GAAN,CAA5B;AAcA,QAAMa,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAT,EAAnB,CAhB2C,CAgBP;;AACpCA,EAAAA,IAAI,CAACC,MAAL,GAAcb,QAAQ,CAACa,MAAvB;AACAD,EAAAA,IAAI,CAACE,UAAL,GAAkBd,QAAQ,CAACc,UAA3B,CAlB2C,CAmB3C;;AACA,SAAOF,IAAP;AACD;;AAED,MAAMG,cAAc,GAAG;AACrB;AACA;AACA,QAAMC,OAAN,CAAcC,IAAd,EAAoB;AAClB,WAAO,MAAMnB,QAAQ,CAACD,GAAG,GAAG,KAAP,EAAcoB,IAAd,CAArB;AACD,GALoB;;AAOrB,QAAMC,UAAN,CAAiBC,IAAjB,EAAuB;AACrB,WAAO,MAAMrB,QAAQ,CAACD,GAAG,GAAG,QAAP,EAAiB;AAAEuB,MAAAA,GAAG,EAAED;AAAP,KAAjB,CAArB;AACD,GAToB;;AAWrB,QAAME,aAAN,CAAoBJ,IAApB,EAA0B;AACxB,WAAO,MAAMnB,QAAQ,CAACD,GAAG,GAAG,QAAP,EAAiBoB,IAAjB,CAArB;AACD,GAboB;;AAerB,QAAMK,YAAN,GAAqB;AACnB,WAAO,MAAMxB,QAAQ,CAACD,GAAG,GAAG,KAAP,CAArB;AACD,GAjBoB;;AAmBrB,QAAM0B,cAAN,GAAuB;AACrB,WAAO,MAAMzB,QAAQ,CAACD,GAAG,GAAG,OAAP,CAArB;AACD,GArBoB;;AAuBrB,QAAM2B,QAAN,CAAeL,IAAf,EAAqB;AACnB,WAAO,MAAMrB,QAAQ,CAACD,GAAG,GAAG,MAAP,EAAe;AAAEuB,MAAAA,GAAG,EAAED;AAAP,KAAf,CAArB;AACD;;AAzBoB,CAAvB;AA4BA,eAAeJ,cAAf","sourcesContent":["const url = \"http://localhost:5000/\";\r\n\r\nasync function postData(url = \"\", data = {}) {\r\n  // Default options are marked with *\r\n  const response = await fetch(url, {\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrer: \"no-referrer\", // no-referrer, *client\r\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  });\r\n\r\n  const json = await response.json(); // parses JSON response into native JavaScript objects\r\n  json.status = response.status;\r\n  json.statusText = response.statusText;\r\n  // console.log(json, typeof(json));\r\n  return json;\r\n}\r\n\r\nconst fetch_function = {\r\n  // https://github.com/larryevolveu/reference/blob/master/api/javascript/api.test.js\r\n  // passing in the relevant object / object key\r\n  async addCity(city) {\r\n    return await postData(url + \"add\", city);\r\n  },\r\n\r\n  async deleteCity(ckey) {\r\n    return await postData(url + \"delete\", { key: ckey });\r\n  },\r\n\r\n  async updateCityPop(city) {\r\n    return await postData(url + \"update\", city);\r\n  },\r\n\r\n  async getAllCities() {\r\n    return await postData(url + \"all\");\r\n  },\r\n\r\n  async clearAllCities() {\r\n    return await postData(url + \"clear\");\r\n  },\r\n\r\n  async readCity(ckey) {\r\n    return await postData(url + \"read\", { key: ckey });\r\n  }\r\n};\r\n\r\nexport default fetch_function;\r\n"]},"metadata":{},"sourceType":"module"}