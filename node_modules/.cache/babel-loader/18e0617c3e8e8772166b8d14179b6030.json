{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\cohort3\\\\react-03\\\\react-03\\\\src\\\\components\\\\accounts\\\\accounts.js\";\n\n/** This is where you instatiate the Accounts Class */\nimport React, { Component } from \"react\";\nimport \"./accounts.css\";\nimport AccountController from \"./accountPSC.js\";\nimport AccountCard from \"./accountCard.js\";\n/** Create a Stateful Component Class called Accounts */\n\nclass Accounts extends Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleCreateNewAccount = () => {\n      //minor validition\n      //get values from inputs\n      //call pojo create handler\n      this.accountManager.createAccount(this.state.nameInput, this.state.startingBalanceInput);\n      this.calculate(); //Set(Reset) the State of this Class - Accounts\n\n      this.setState({\n        nameInput: \"\",\n        startingBalanceInput: \"\"\n      }); // console.log(this.accountManager.highestAccount().balance);\n      // console.log(this.accountManager.accountList);\n    };\n\n    this.handleDelete = accountName => {\n      this.accountManager.removeAccount(accountName);\n      this.calculate();\n      this.setState({\n        nameInput: \"\"\n      });\n    };\n\n    this.calculate = () => {\n      this.setState({\n        totalDisplay: this.accountManager.totalAccounts(),\n        highestDisplay: this.accountManager.highestAccount().balance,\n        lowestDisplay: this.accountManager.lowestAccount().balance\n      });\n    };\n\n    this.renderCards = () => {\n      return this.accountManager.accountList.map(accountEach => {\n        return /*#__PURE__*/React.createElement(AccountCard, {\n          key: accountEach.accountName,\n          account: accountEach,\n          calculate: this.calculate,\n          removeAccount: this.handleDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.state = {\n      nameInput: \"\",\n      startingBalanceInput: \"\",\n      totalDisplay: \"\",\n      highestDisplay: \"\",\n      lowestDisplay: \"\"\n    };\n    this.accountManager = new AccountController();\n  } //This is inside the Class - a Method\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \" My Accounts \"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"idPanelContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"idLeftPanel\",\n      className: \"leftPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Account Manager\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"input1\",\n      type: \"text\",\n      placeholder: \"Add an Account Name\",\n      name: \"nameInput\",\n      value: this.state.nameInput,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"input2\",\n      type: \"number\",\n      placeholder: \"Enter initial balance\",\n      name: \"startingBalanceInput\",\n      value: this.state.startingBalanceInput,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addBalance\",\n      id: \"idAddBalance\",\n      onClick: this.handleCreateNewAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Create New Account\"), this.renderCards()), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"idRightPanel\",\n      className: \"rightPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \" \", \"My Current Balances\", /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Total Balance of Accounts: \", this.state.totalDisplay), /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Highest Account: \", this.state.highestDisplay), /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Lowest Account: \", this.state.lowestDisplay))));\n  } //Close Render\n\n\n} //Close Object\n\n\nexport default Accounts;","map":{"version":3,"sources":["C:/code/cohort3/react-03/react-03/src/components/accounts/accounts.js"],"names":["React","Component","AccountController","AccountCard","Accounts","constructor","handleInputChange","event","setState","target","name","value","handleCreateNewAccount","accountManager","createAccount","state","nameInput","startingBalanceInput","calculate","handleDelete","accountName","removeAccount","totalDisplay","totalAccounts","highestDisplay","highestAccount","balance","lowestDisplay","lowestAccount","renderCards","accountList","map","accountEach","render"],"mappings":"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","sourcesContent":["/** This is where you instatiate the Accounts Class */\nimport React, { Component } from \"react\";\nimport \"./accounts.css\";\nimport AccountController from \"./accountPSC.js\";\nimport AccountCard from \"./accountCard.js\";\n\n/** Create a Stateful Component Class called Accounts */\nclass Accounts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nameInput: \"\",\n      startingBalanceInput: \"\",\n      totalDisplay: \"\",\n      highestDisplay: \"\",\n      lowestDisplay: \"\"\n    };\n    this.accountManager = new AccountController();\n  }\n  //This is inside the Class - a Method\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleCreateNewAccount = () => {\n    //minor validition\n    //get values from inputs\n    //call pojo create handler\n    this.accountManager.createAccount(\n      this.state.nameInput,\n      this.state.startingBalanceInput\n    );\n    this.calculate();\n    //Set(Reset) the State of this Class - Accounts\n    this.setState({\n      nameInput: \"\",\n      startingBalanceInput: \"\"\n    });\n    // console.log(this.accountManager.highestAccount().balance);\n    // console.log(this.accountManager.accountList);\n  };\n\n  handleDelete = accountName => {\n    this.accountManager.removeAccount(accountName);\n    this.calculate();\n    this.setState({\n      nameInput: \"\"\n    });\n  };\n\n  calculate = () => {\n    this.setState({\n      totalDisplay: this.accountManager.totalAccounts(),\n      highestDisplay: this.accountManager.highestAccount().balance,\n      lowestDisplay: this.accountManager.lowestAccount().balance\n    });\n  };\n\n  renderCards = () => {\n    return this.accountManager.accountList.map(accountEach => {\n      return (\n        <AccountCard\n          key={accountEach.accountName}\n          account={accountEach}\n          calculate={this.calculate}\n          removeAccount={this.handleDelete}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <section>\n        <h2> My Accounts </h2>\n        <div id=\"idPanelContainer\">\n          <div id=\"idLeftPanel\" className=\"leftPanel\">\n            Account Manager\n            <input\n              id=\"input1\"\n              type=\"text\"\n              placeholder=\"Add an Account Name\"\n              name=\"nameInput\"\n              value={this.state.nameInput}\n              onChange={this.handleInputChange}\n            />\n            <input\n              id=\"input2\"\n              type=\"number\"\n              placeholder=\"Enter initial balance\"\n              name=\"startingBalanceInput\"\n              value={this.state.startingBalanceInput}\n              onChange={this.handleInputChange}\n            />\n            <button\n              className=\"addBalance\"\n              id=\"idAddBalance\"\n              onClick={this.handleCreateNewAccount}\n            >\n              Create New Account\n            </button>\n            {/* <h2> Account List </h2> */}\n            {this.renderCards()}\n          </div>\n\n          <div id=\"idRightPanel\" className=\"rightPanel\">\n            {\" \"}\n            My Current Balances\n            <h3 id=\"display\">\n              Total Balance of Accounts: {this.state.totalDisplay}\n            </h3>\n            <h3 id=\"display\">Highest Account: {this.state.highestDisplay}</h3>\n            <h3 id=\"display\">Lowest Account: {this.state.lowestDisplay}</h3>\n          </div>\n        </div>\n      </section>\n    );\n  }                                                                               //Close Render\n}                                                                                 //Close Object\n\nexport default Accounts;\n"]},"metadata":{},"sourceType":"module"}