{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\cohort3\\\\react-03\\\\react-03\\\\src\\\\components\\\\Linklist\\\\Linklist.js\";\nimport React, { useState, Fragment } from \"react\";\nimport \"./LList.css\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { LinkedList } from \"./LLfunctions.js\";\nconst LLInst = new LinkedList();\n\nfunction LList() {\n  //  setting state\n  const [subject, setSubject] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [current, setCurrent] = useState(\"\"); // onclick  event\n\n  const subjectInputChange = event => {\n    setSubject(event.target.value);\n  };\n\n  const amountInputChange = event => {\n    setAmount(event.target.value);\n  };\n\n  const pressEnter = event => {\n    if (event.key === \"Enter\" || event.target.name === \"enterButton\") {\n      subject !== \"\" && amount !== \"\" ? handleAdd() : alert(\"Subject and Amt Fields cannot be empty \"); // document.getElementById(subject).focus();\n    }\n  };\n\n  const handleAdd = () => {\n    LLInst.add(subject, amount);\n    setCurrent(LLInst.current); // LLInst.showList();\n\n    setSubject(\"\");\n    setAmount(\"\");\n  };\n\n  const handleFirst = e => {\n    //consolelog(\"Target: \", e.target.name);\n    // LLInst.first();\n    setCurrent(LLInst.first()); //consolelog(\"First/Current \", LLInst.current);\n  };\n\n  const handlePrevious = e => {\n    //consolelog(\"Target: \", e.target.name);\n    setCurrent(LLInst.prev()); //consolelog(\"Prev/Current \", LLInst.current);\n  };\n\n  const handleDelete = e => {\n    //consolelog(\"Target: \", e.target.name);\n    setCurrent(LLInst.delete());\n  };\n\n  const handleNext = e => {\n    //consolelog(\"Target: \", e.target.name);\n    setCurrent(LLInst.next()); //consolelog(\"Next: \", LLInst.current);\n  };\n\n  const handleLast = e => {\n    //consolelog(\"Target: \", e.target.name);\n    setCurrent(LLInst.last());\n  };\n\n  const renderAmount = () => {\n    while (LLInst.headNode) {\n      let sumAmount = `Sum: ${LLInst.listAmount}`;\n      return sumAmount;\n    }\n  };\n\n  const renderNodes = () => {\n    const markCurrent = {\n      color: \"blue\",\n      fontWeight: \"bold\",\n      backgroundColor: \"white\"\n    }; // let nodes = [];\n\n    while (LLInst.current) {\n      // console.log(\"showlist: \", LLInst.showList());\n      let llistArr = [];\n      llistArr = LLInst.showList(); // console.log(\"llistArr\", LLInst.current);\n\n      return llistArr.map(nodes => {\n        // console.log(\"llistArr curr\", LLInst.current);\n        // console.log(\"llistArr head\", LLInst.headNode);\n        // console.log(\"nodes\", nodes);\n        return nodes[0] === current.subject ? /*#__PURE__*/React.createElement(Fragment, {\n          key: nodes[0] + nodes[1],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: nodes[0] + nodes[1],\n          style: markCurrent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, nodes[0], \", \", nodes[1], \",\", nodes[2])) : /*#__PURE__*/React.createElement(Fragment, {\n          key: nodes[0] + nodes[1],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          key: nodes[0] + nodes[1],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, nodes[0], \", \", nodes[1], \",\", nodes[2]));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"LinkedList\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"idPanelContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"idLeftPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    id: \"idInputs\",\n    name: \"Data in LinkedList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Inputs\"), \"Subject :\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"subject\",\n    name: \"subject\",\n    type: \"text\",\n    className: \"left-input\",\n    placeholder: \"Enter Subject\",\n    autoFocus: true,\n    value: subject,\n    onChange: subjectInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), \"Amount:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"amount\",\n    name: \"amount\",\n    type: \"number\",\n    className: \"left-input\",\n    placeholder: \"Enter Amount\",\n    step: \"0.01\",\n    value: amount,\n    onChange: amountInputChange,\n    onKeyPress: pressEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button // type=\"button\"\n  // className=\"btn btn-secondary\"\n  , {\n    variant: \"primary\",\n    name: \"enterButton\",\n    onClick: pressEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Enter\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFirst,\n    id: \"reset\",\n    variant: \"primary\",\n    name: \"first\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"First\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePrevious,\n    id: \"reset\",\n    variant: \"primary\",\n    name: \"prev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDelete,\n    id: \"reset\",\n    variant: \"primary\",\n    name: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleNext,\n    id: \"reset\",\n    variant: \"primary\",\n    name: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLast,\n    id: \"reset\",\n    variant: \"primary\",\n    name: \"last\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Last\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"idRightPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, renderNodes(), renderAmount())));\n}\n\nexport default LList;","map":{"version":3,"sources":["C:/code/cohort3/react-03/react-03/src/components/Linklist/Linklist.js"],"names":["React","useState","Fragment","Button","LinkedList","LLInst","LList","subject","setSubject","amount","setAmount","current","setCurrent","subjectInputChange","event","target","value","amountInputChange","pressEnter","key","name","handleAdd","alert","add","handleFirst","e","first","handlePrevious","prev","handleDelete","delete","handleNext","next","handleLast","last","renderAmount","headNode","sumAmount","listAmount","renderNodes","markCurrent","color","fontWeight","backgroundColor","llistArr","showList","map","nodes"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport \"./LList.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { LinkedList } from \"./LLfunctions.js\";\r\n\r\nconst LLInst = new LinkedList();\r\n\r\nfunction LList() {\r\n  //  setting state\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [current, setCurrent] = useState(\"\");\r\n// onclick  event\r\n  const subjectInputChange = event => {\r\n    setSubject(event.target.value);\r\n  };\r\n\r\n  const amountInputChange = event => {\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n  const pressEnter = event => {\r\n    if (event.key === \"Enter\" || event.target.name === \"enterButton\") {\r\n      subject !== \"\" && amount !== \"\"\r\n        ? handleAdd()\r\n        : alert(\"Subject and Amt Fields cannot be empty \");\r\n      // document.getElementById(subject).focus();\r\n    }\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    LLInst.add(subject, amount);\r\n    setCurrent(LLInst.current);\r\n    // LLInst.showList();\r\n\r\n    setSubject(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  const handleFirst = e => {\r\n    //consolelog(\"Target: \", e.target.name);\r\n    // LLInst.first();\r\n    setCurrent(LLInst.first());\r\n    //consolelog(\"First/Current \", LLInst.current);\r\n  };\r\n\r\n  const handlePrevious = e => {\r\n    //consolelog(\"Target: \", e.target.name);\r\n    setCurrent(LLInst.prev());\r\n    //consolelog(\"Prev/Current \", LLInst.current);\r\n  };\r\n\r\n  const handleDelete = e => {\r\n    //consolelog(\"Target: \", e.target.name);\r\n    setCurrent(LLInst.delete());\r\n  };\r\n\r\n  const handleNext = e => {\r\n    //consolelog(\"Target: \", e.target.name);\r\n    setCurrent(LLInst.next());\r\n    //consolelog(\"Next: \", LLInst.current);\r\n  };\r\n\r\n  const handleLast = e => {\r\n    //consolelog(\"Target: \", e.target.name);\r\n    setCurrent(LLInst.last());\r\n  };\r\n  const renderAmount = () => {\r\n    while (LLInst.headNode) {\r\n      let sumAmount = `Sum: ${LLInst.listAmount}`;\r\n      return sumAmount;\r\n    }\r\n  };\r\n\r\n  const renderNodes = () => {\r\n    const markCurrent = {\r\n      color: \"blue\",\r\n      fontWeight: \"bold\",\r\n      backgroundColor: \"white\"\r\n    };\r\n    // let nodes = [];\r\n    while (LLInst.current) {\r\n      // console.log(\"showlist: \", LLInst.showList());\r\n      let llistArr = [];\r\n      llistArr = LLInst.showList();\r\n      // console.log(\"llistArr\", LLInst.current);\r\n\r\n      return llistArr.map(nodes => {\r\n        // console.log(\"llistArr curr\", LLInst.current);\r\n        // console.log(\"llistArr head\", LLInst.headNode);\r\n        // console.log(\"nodes\", nodes);\r\n\r\n        return nodes[0] === current.subject ? (\r\n          <Fragment key={nodes[0] + nodes[1]}>\r\n            <p key={nodes[0] + nodes[1]} style={markCurrent}>\r\n              {nodes[0]}, {nodes[1]},{nodes[2]}\r\n            </p>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment key={nodes[0] + nodes[1]}>\r\n            <p key={nodes[0] + nodes[1]}>\r\n              {nodes[0]}, {nodes[1]},{nodes[2]}\r\n            </p>\r\n          </Fragment>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h1>LinkedList</h1>\r\n      <div id=\"idPanelContainer\">\r\n        <div id=\"idLeftPanel\">\r\n          <fieldset id=\"idInputs\" name=\"Data in LinkedList\">\r\n            <legend>Inputs</legend>\r\n            Subject :\r\n            <input\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              type=\"text\"\r\n              className=\"left-input\"\r\n              placeholder=\"Enter Subject\"\r\n              autoFocus={true}\r\n              value={subject}\r\n              onChange={subjectInputChange}\r\n            />\r\n            <br />\r\n            Amount:\r\n            <input\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              className=\"left-input\"\r\n              placeholder=\"Enter Amount\"\r\n              step=\"0.01\"\r\n              value={amount}\r\n              onChange={amountInputChange}\r\n              onKeyPress={pressEnter}\r\n            />\r\n            <br />\r\n            <Button\r\n              // type=\"button\"\r\n              // className=\"btn btn-secondary\"\r\n              \r\n              variant=\"primary\"\r\n              name=\"enterButton\"\r\n              onClick={pressEnter}\r\n            >\r\n              Enter\r\n            </Button>\r\n          </fieldset>\r\n          <br />\r\n\r\n          <Button\r\n            onClick={handleFirst}\r\n            id=\"reset\"\r\n            variant=\"primary\"\r\n            name=\"first\"\r\n          >\r\n            First\r\n          </Button>\r\n          <Button\r\n            onClick={handlePrevious}\r\n            id=\"reset\"\r\n            variant=\"primary\"\r\n            name=\"prev\"\r\n          >\r\n            Previous\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={handleDelete}\r\n            id=\"reset\"\r\n            variant=\"primary\"\r\n            name=\"delete\"\r\n          >\r\n            Delete\r\n          </Button>\r\n          <Button onClick={handleNext}id=\"reset\"  variant=\"primary\" name=\"next\">\r\n            Next\r\n          </Button>\r\n          <Button onClick={handleLast} id=\"reset\" variant=\"primary\" name=\"last\">\r\n            Last\r\n          </Button>\r\n        </div>\r\n\r\n        <div id=\"idRightPanel\">\r\n          {renderNodes()}\r\n          {renderAmount()}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default LList;\r\n"]},"metadata":{},"sourceType":"module"}